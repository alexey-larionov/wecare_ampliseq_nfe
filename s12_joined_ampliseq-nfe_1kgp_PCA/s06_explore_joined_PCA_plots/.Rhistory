rm(myColours, myColourScale, plotly_group, g)
pc1_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc1_th
pc2_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc2_th
pca_outliers <- pc1_outliers | pc2_outliers
View(eigenphen_ampliseq_kgen.df)
pc1_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc1_th
pc2_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc2_th
pca_outliers <- pc1_outliers | pc2_outliers
sum(pc1_outliers)
sum(pc2_outliers)
sum(pca_outliers)
# Chunk 1: set_width
#eval=F
options(width = 999)
# https://stackoverflow.com/questions/36845178/width-of-r-code-chunk-output-in-rmarkdown-files-knitr-ed-to-html
# Chunk 2: start_section
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
library(ggplot2)
library(plotly)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_joined_PCA/s06_explore_joined_PCA_plots"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
# Chunk 3: read_data
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s11_remove_BRCA_PALB_carriers"
load(paste(source_folder, "s03_exclude_BRCA1_BCRA2_PALB2_carriers.RData", sep="/"))
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_joined_PCA/s05_calculate_joined_1kgp_ampliseq_nfe_PCs/data/s04_pca"
eigenvectors_file <- paste(source_folder, "ampliseq_nfe_1kg_293_3216_100PCs.eigenvec", sep="/")
eigenvectors.df <- read.table(eigenvectors_file, header=T, sep="\t",quote="")
eigenvalues_file <- paste(source_folder, "ampliseq_nfe_1kg_293_3216_100PCs.eigenval", sep="/")
eigenvalues.df <- read.table(eigenvalues_file, header=F, sep="\t",quote="")
source_folder="/Users/alexey/Documents/resources/1kgp"
kg_phenotypes_file <- paste(source_folder, "integrated_call_samples_v3.20130502.ALL.panel", sep="/")
kg_phenotypes.df <- read.table(kg_phenotypes_file, header=T)
rm(source_folder, eigenvectors_file, eigenvalues_file, kg_phenotypes_file, genotypes.mx, variants.df)
# Chunk 4: start_check
ls()
dim(eigenvectors.df)
dim(eigenvalues.df)
dim(kg_phenotypes.df)
dim(phenotypes.df)
table(phenotypes.df$cc)
# Chunk 5
eigenvectors.df[1:5,1:5]
rownames(eigenvectors.df) <- eigenvectors.df$FID
eigenvectors.df <- eigenvectors.df[,-1]
eigenvectors.df[1:5,1:5]
# Chunk 6: eigenvalues
plot(eigenvalues.df$V1, type="b", ylab="Variance",
main="Top 100 eigenvectors")
plot(eigenvalues.df$V1[1:10], type="b", ylab="Variance",
main="Top 10 eigenvectors")
# Chunk 7: ampliseq_1kgp
# Check the expected order of samples
3216 - 197
eigenvectors.df[c(2504,2505),c("IID","PC1")]
eigenvectors.df[c(3019,3020),c("IID","PC1")]
# Prepare table with nfe IDs
nfe_pca <- eigenvectors.df$IID[3020:3216]
nfe_ampliseq <- sub("2:","",nfe_pca)
nfe.df <- data.frame(nfe_ampliseq, nfe_pca)
# Remove overlapping NFE from eigenvectors data
selected_samples <- ! eigenvectors.df$IID %in% nfe.df$nfe_pca
sum(selected_samples)
515+2504
eigenvectors_ampliseq_kgen.df <- eigenvectors.df[selected_samples,1:6]
"sample" -> colnames(eigenvectors_ampliseq_kgen.df)[1]
# Prepare phenotypes for ampliseq-kgen data
phenotypes.df[c(515:516),c(1,2)]
phenotypes_ampliseq.df <- phenotypes.df[1:515,c("long_ids","cc")]
table(phenotypes_ampliseq.df$cc)
"WECARE" -> phenotypes_ampliseq.df$cc[phenotypes_ampliseq.df$cc==1]
"WECARE" -> phenotypes_ampliseq.df$cc[phenotypes_ampliseq.df$cc==0]
table(phenotypes_ampliseq.df$cc)
c("sample","group") -> colnames(phenotypes_ampliseq.df)
phenotypes_kgen.df <- kg_phenotypes.df[,c("sample","super_pop")]
c("sample","group") -> colnames(phenotypes_kgen.df)
phenotypes_ampliseq_kgen.df <- rbind(phenotypes_kgen.df,phenotypes_ampliseq.df)
table(phenotypes_ampliseq_kgen.df$group)
# Add eigenvectors to phenotypes
eigenphen_ampliseq_kgen.df <- full_join(
phenotypes_ampliseq_kgen.df, eigenvectors_ampliseq_kgen.df, by="sample")
dim(eigenphen_ampliseq_kgen.df)
head(eigenphen_ampliseq_kgen.df)
tail(eigenphen_ampliseq_kgen.df)
# Clean-up
rm(nfe_pca, nfe_ampliseq, selected_samples, eigenvectors_ampliseq_kgen.df, kg_phenotypes.df,
phenotypes_ampliseq.df, phenotypes_ampliseq_kgen.df, nfe.df, phenotypes.df)
# Chunk 8: ampliseq_1kgp_plot
# Set outliers thresholds (manually selected on the basis of visual assessment of plots)
pc1_th <- 0 # 0.005
pc2_th <- 0.0075 # 0.01
# Prepare vector fr colour scale
myColours <- c("EUR"="BLUE", "AFR"="YELLOW", "AMR"="GREEN",
"SAS"="GREY", "EAS"="PINK",
"WECARE"="RED")
myColourScale <- scale_colour_manual(values=myColours)
# Static plot
ggplot(eigenphen_ampliseq_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=group)) +
labs(title="293 non-rare variants not in LD", x="PC1", y="PC2") +
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
# Interactive plot
plotly_group <- factor(eigenphen_ampliseq_kgen.df$group,
levels=c("AFR","AMR","EAS","SAS","EUR","WECARE"))
g <- ggplot(eigenphen_ampliseq_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=plotly_group, text=sample)) +
labs(title="293 non-rare variants not in LD", x="PC1", y="PC2") +
theme(legend.title=element_blank()) + # To suppress the legend title, otherwise it would be "plotly_group
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
ggplotly(g, tooltip="text") # By default the tooltip would also show coordinates
# Clean-up
rm(myColours, myColourScale, plotly_group, g)
# Chunk 9: nfe_1kgp
# Check the expected order of samples
3216 - 197
eigenvectors.df[c(2504,2505),c("IID","PC1")]
eigenvectors.df[c(3019,3020),c("IID","PC1")]
# Prepare table with ampliseq IDs
ampliseq_ids <- eigenvectors.df$IID[2505:3019]
# Remove ampliseq from eigenvectors data
selected_samples <- ! eigenvectors.df$IID %in% ampliseq_ids
sum(selected_samples)
197+2504
eigenvectors_nfe_kgen.df <- eigenvectors.df[selected_samples,1:6]
"sample" -> colnames(eigenvectors_nfe_kgen.df)[1]
# Prepare phenotypes for ampliseq-kgen data
eigenvectors_nfe_kgen.df$sample[2504:2505]
phenotypes_nfe.df <- data.frame(sample=eigenvectors_nfe_kgen.df$sample[2505:2701], group="Re-processed NFE")
phenotypes_nfe_kgen.df <- rbind(phenotypes_kgen.df,phenotypes_nfe.df)
table(phenotypes_nfe_kgen.df$group)
# Add eigenvectors to phenotypes
eigenphen_nfe_kgen.df <- full_join(
phenotypes_nfe_kgen.df, eigenvectors_nfe_kgen.df, by="sample")
dim(eigenphen_nfe_kgen.df)
head(eigenphen_nfe_kgen.df)
tail(eigenphen_nfe_kgen.df)
# Clean-up
rm(selected_samples, eigenvectors_nfe_kgen.df,
phenotypes_nfe.df, phenotypes_nfe_kgen.df, phenotypes_kgen.df)
# Chunk 10: nfe_pca_plot
# Prepare vector fr colour scale
myColours <- c("EUR"="BLUE", "AFR"="YELLOW", "AMR"="GREEN",
"SAS"="GREY", "EAS"="PINK",
"Re-processed NFE"="CYAN")
myColourScale <- scale_colour_manual(values=myColours)
# Static plot
ggplot(eigenphen_nfe_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=group)) +
labs(title="293 non-rare variants not in LD", x="PC1", y="PC2") +
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
# Interactive plot
plotly_group <- factor(eigenphen_nfe_kgen.df$group,
levels=c("AFR","AMR","EAS","SAS","EUR","Re-processed NFE"))
g <- ggplot(eigenphen_nfe_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=plotly_group, text=sample)) +
labs(title="293 non-rare variants not in LD", x="PC1", y="PC2") +
theme(legend.title=element_blank()) + # To suppress the legend title, otherwise it would be "plotly_group
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
ggplotly(g, tooltip="text") # By default the tooltip would also show coordinates
# Clean-up
rm(myColours, myColourScale, plotly_group, g)
pc1_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc1_th
pc2_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc2_th
pca_outliers <- pc1_outliers | pc2_outliers
sum(pc1_outliers)
sum(pc2_outliers)
sum(pca_outliers)
pc1_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc1_th & eigenphen_ampliseq_kgen.df$sample %in% ampliseq_ids
pc2_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc2_th & eigenphen_ampliseq_kgen.df$sample %in% ampliseq_ids
pca_outliers <- pc1_outliers | pc2_outliers
sum(pc1_outliers)
sum(pc2_outliers)
sum(pca_outliers)
pc1_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc1_th & eigenphen_ampliseq_kgen.df$sample %in% ampliseq_ids
pc2_outliers <- eigenphen_ampliseq_kgen.df$PC2 > pc2_th & eigenphen_ampliseq_kgen.df$sample %in% ampliseq_ids
pca_outliers <- pc1_outliers | pc2_outliers
sum(pc1_outliers)
sum(pc2_outliers)
sum(pca_outliers)
outliers <- rownames(eigenphen_ampliseq_kgen.df)[pca_outliers]
outliers <- eigenphen_ampliseq_kgen.df[pca_outliers,"sample"]
# Clean-up
rm(pc1_th, pc2_th, ampliseq_ids,
pc1_outliers, pc2_outliers, pca_outliers)
# Chunk 1: set_width
#eval=F
options(width = 999)
# https://stackoverflow.com/questions/36845178/width-of-r-code-chunk-output-in-rmarkdown-files-knitr-ed-to-html
# Chunk 2: start_section
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
library(ggplot2)
library(plotly)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_joined_PCA/s06_explore_joined_PCA_plots"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
# Chunk 3: read_data
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s11_remove_BRCA_PALB_carriers"
load(paste(source_folder, "s03_exclude_BRCA1_BCRA2_PALB2_carriers.RData", sep="/"))
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_joined_PCA/s05_calculate_joined_1kgp_ampliseq_nfe_PCs/data/s04_pca"
eigenvectors_file <- paste(source_folder, "ampliseq_nfe_1kg_293_3216_100PCs.eigenvec", sep="/")
eigenvectors.df <- read.table(eigenvectors_file, header=T, sep="\t",quote="")
eigenvalues_file <- paste(source_folder, "ampliseq_nfe_1kg_293_3216_100PCs.eigenval", sep="/")
eigenvalues.df <- read.table(eigenvalues_file, header=F, sep="\t",quote="")
source_folder="/Users/alexey/Documents/resources/1kgp"
kg_phenotypes_file <- paste(source_folder, "integrated_call_samples_v3.20130502.ALL.panel", sep="/")
kg_phenotypes.df <- read.table(kg_phenotypes_file, header=T)
rm(source_folder, eigenvectors_file, eigenvalues_file, kg_phenotypes_file, genotypes.mx, variants.df)
# Chunk 4: start_check
ls()
dim(eigenvectors.df)
dim(eigenvalues.df)
dim(kg_phenotypes.df)
dim(phenotypes.df)
table(phenotypes.df$cc)
# Chunk 5
eigenvectors.df[1:5,1:5]
rownames(eigenvectors.df) <- eigenvectors.df$FID
eigenvectors.df <- eigenvectors.df[,-1]
eigenvectors.df[1:5,1:5]
# Chunk 6: eigenvalues
plot(eigenvalues.df$V1, type="b", ylab="Variance",
main="Top 100 eigenvectors")
plot(eigenvalues.df$V1[1:10], type="b", ylab="Variance",
main="Top 10 eigenvectors")
# Chunk 7: ampliseq_1kgp
# Check the expected order of samples
3216 - 197
eigenvectors.df[c(2504,2505),c("IID","PC1")]
eigenvectors.df[c(3019,3020),c("IID","PC1")]
# Prepare table with nfe IDs
nfe_pca <- eigenvectors.df$IID[3020:3216]
nfe_ampliseq <- sub("2:","",nfe_pca)
nfe.df <- data.frame(nfe_ampliseq, nfe_pca)
# Remove overlapping NFE from eigenvectors data
selected_samples <- ! eigenvectors.df$IID %in% nfe.df$nfe_pca
sum(selected_samples)
515+2504
eigenvectors_ampliseq_kgen.df <- eigenvectors.df[selected_samples,1:6]
"sample" -> colnames(eigenvectors_ampliseq_kgen.df)[1]
# Prepare phenotypes for ampliseq-kgen data
phenotypes.df[c(515:516),c(1,2)]
phenotypes_ampliseq.df <- phenotypes.df[1:515,c("long_ids","cc")]
table(phenotypes_ampliseq.df$cc)
"WECARE" -> phenotypes_ampliseq.df$cc[phenotypes_ampliseq.df$cc==1]
"WECARE" -> phenotypes_ampliseq.df$cc[phenotypes_ampliseq.df$cc==0]
table(phenotypes_ampliseq.df$cc)
c("sample","group") -> colnames(phenotypes_ampliseq.df)
phenotypes_kgen.df <- kg_phenotypes.df[,c("sample","super_pop")]
c("sample","group") -> colnames(phenotypes_kgen.df)
phenotypes_ampliseq_kgen.df <- rbind(phenotypes_kgen.df,phenotypes_ampliseq.df)
table(phenotypes_ampliseq_kgen.df$group)
# Add eigenvectors to phenotypes
eigenphen_ampliseq_kgen.df <- full_join(
phenotypes_ampliseq_kgen.df, eigenvectors_ampliseq_kgen.df, by="sample")
dim(eigenphen_ampliseq_kgen.df)
head(eigenphen_ampliseq_kgen.df)
tail(eigenphen_ampliseq_kgen.df)
# Clean-up
rm(nfe_pca, nfe_ampliseq, selected_samples, eigenvectors_ampliseq_kgen.df, kg_phenotypes.df,
phenotypes_ampliseq.df, phenotypes_ampliseq_kgen.df, nfe.df, phenotypes.df)
# Set outliers thresholds (manually selected on the basis of visual assessment of plots)
pc1_th <- 0 # 0.005
pc2_th <- 0.0075 # 0.01
# Prepare vector fr colour scale
myColours <- c("EUR"="BLUE", "AFR"="YELLOW", "AMR"="GREEN",
"SAS"="GREY", "EAS"="PINK",
"WECARE"="RED")
myColourScale <- scale_colour_manual(values=myColours)
# Static plot
ggplot(eigenphen_ampliseq_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=group)) +
labs(title="Wecare Ampliseq PCA",
subtitle="293 non-rare variants not in LD", x="PC1", y="PC2") +
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
# Interactive plot
plotly_group <- factor(eigenphen_ampliseq_kgen.df$group,
levels=c("AFR","AMR","EAS","SAS","EUR","WECARE"))
g <- ggplot(eigenphen_ampliseq_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=plotly_group, text=sample)) +
labs(title="WECARE Ampliseq PCA",
subtitle="based on 293 non-rare variants not in LD", x="PC1", y="PC2") +
theme(legend.title=element_blank()) + # To suppress the legend title, otherwise it would be "plotly_group
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
ggplotly(g, tooltip="text") # By default the tooltip would also show coordinates
g <- ggplot(eigenphen_ampliseq_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=plotly_group, text=sample)) +
labs(title="WECARE Ampliseq PCA\nbased on 293 non-rare variants not in LD", x="PC1", y="PC2") +
theme(legend.title=element_blank()) + # To suppress the legend title, otherwise it would be "plotly_group
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
ggplotly(g, tooltip="text") # By default the tooltip would also show coordinates
# Chunk 1: set_width
#eval=F
options(width = 999)
# https://stackoverflow.com/questions/36845178/width-of-r-code-chunk-output-in-rmarkdown-files-knitr-ed-to-html
# Chunk 2: start_section
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
library(ggplot2)
library(plotly)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_joined_PCA/s06_explore_joined_PCA_plots"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
# Chunk 3: read_data
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s11_remove_BRCA_PALB_carriers"
load(paste(source_folder, "s03_exclude_BRCA1_BCRA2_PALB2_carriers.RData", sep="/"))
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_joined_PCA/s05_calculate_joined_1kgp_ampliseq_nfe_PCs/data/s04_pca"
eigenvectors_file <- paste(source_folder, "ampliseq_nfe_1kg_293_3216_100PCs.eigenvec", sep="/")
eigenvectors.df <- read.table(eigenvectors_file, header=T, sep="\t",quote="")
eigenvalues_file <- paste(source_folder, "ampliseq_nfe_1kg_293_3216_100PCs.eigenval", sep="/")
eigenvalues.df <- read.table(eigenvalues_file, header=F, sep="\t",quote="")
source_folder="/Users/alexey/Documents/resources/1kgp"
kg_phenotypes_file <- paste(source_folder, "integrated_call_samples_v3.20130502.ALL.panel", sep="/")
kg_phenotypes.df <- read.table(kg_phenotypes_file, header=T)
rm(source_folder, eigenvectors_file, eigenvalues_file, kg_phenotypes_file, genotypes.mx, variants.df)
# Chunk 4: start_check
ls()
dim(eigenvectors.df)
dim(eigenvalues.df)
dim(kg_phenotypes.df)
dim(phenotypes.df)
table(phenotypes.df$cc)
# Chunk 5
eigenvectors.df[1:5,1:5]
rownames(eigenvectors.df) <- eigenvectors.df$FID
eigenvectors.df <- eigenvectors.df[,-1]
eigenvectors.df[1:5,1:5]
# Chunk 6: eigenvalues
plot(eigenvalues.df$V1, type="b", ylab="Variance",
main="Top 100 eigenvectors")
plot(eigenvalues.df$V1[1:10], type="b", ylab="Variance",
main="Top 10 eigenvectors")
# Chunk 7: ampliseq_1kgp
# Check the expected order of samples
3216 - 197
eigenvectors.df[c(2504,2505),c("IID","PC1")]
eigenvectors.df[c(3019,3020),c("IID","PC1")]
# Prepare table with nfe IDs
nfe_pca <- eigenvectors.df$IID[3020:3216]
nfe_ampliseq <- sub("2:","",nfe_pca)
nfe.df <- data.frame(nfe_ampliseq, nfe_pca)
# Remove overlapping NFE from eigenvectors data
selected_samples <- ! eigenvectors.df$IID %in% nfe.df$nfe_pca
sum(selected_samples)
515+2504
eigenvectors_ampliseq_kgen.df <- eigenvectors.df[selected_samples,1:6]
"sample" -> colnames(eigenvectors_ampliseq_kgen.df)[1]
# Prepare phenotypes for ampliseq-kgen data
phenotypes.df[c(515:516),c(1,2)]
phenotypes_ampliseq.df <- phenotypes.df[1:515,c("long_ids","cc")]
table(phenotypes_ampliseq.df$cc)
"WECARE" -> phenotypes_ampliseq.df$cc[phenotypes_ampliseq.df$cc==1]
"WECARE" -> phenotypes_ampliseq.df$cc[phenotypes_ampliseq.df$cc==0]
table(phenotypes_ampliseq.df$cc)
c("sample","group") -> colnames(phenotypes_ampliseq.df)
phenotypes_kgen.df <- kg_phenotypes.df[,c("sample","super_pop")]
c("sample","group") -> colnames(phenotypes_kgen.df)
phenotypes_ampliseq_kgen.df <- rbind(phenotypes_kgen.df,phenotypes_ampliseq.df)
table(phenotypes_ampliseq_kgen.df$group)
# Add eigenvectors to phenotypes
eigenphen_ampliseq_kgen.df <- full_join(
phenotypes_ampliseq_kgen.df, eigenvectors_ampliseq_kgen.df, by="sample")
dim(eigenphen_ampliseq_kgen.df)
head(eigenphen_ampliseq_kgen.df)
tail(eigenphen_ampliseq_kgen.df)
# Clean-up
rm(nfe_pca, nfe_ampliseq, selected_samples, eigenvectors_ampliseq_kgen.df, kg_phenotypes.df,
phenotypes_ampliseq.df, phenotypes_ampliseq_kgen.df, nfe.df, phenotypes.df)
# Chunk 8: ampliseq_1kgp_plot
# Set outliers thresholds (manually selected on the basis of visual assessment of plots)
pc1_th <- 0 # 0.005
pc2_th <- 0.0075 # 0.01
# Prepare vector fr colour scale
myColours <- c("EUR"="BLUE", "AFR"="YELLOW", "AMR"="GREEN",
"SAS"="GREY", "EAS"="PINK",
"WECARE"="RED")
myColourScale <- scale_colour_manual(values=myColours)
# Static plot
ggplot(eigenphen_ampliseq_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=group)) +
labs(title="WECARE Ampliseq PCA",
subtitle="based on 293 non-rare variants not in LD", x="PC1", y="PC2") +
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
# Interactive plot
plotly_group <- factor(eigenphen_ampliseq_kgen.df$group,
levels=c("AFR","AMR","EAS","SAS","EUR","WECARE"))
g <- ggplot(eigenphen_ampliseq_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=plotly_group, text=sample)) +
labs(title="WECARE Ampliseq PCA", x="PC1", y="PC2") +
theme(legend.title=element_blank()) + # To suppress the legend title, otherwise it would be "plotly_group
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
ggplotly(g, tooltip="text") # By default the tooltip would also show coordinates
# Clean-up
rm(myColours, myColourScale, plotly_group, g)
# Chunk 9: nfe_1kgp
# Check the expected order of samples
3216 - 197
eigenvectors.df[c(2504,2505),c("IID","PC1")]
eigenvectors.df[c(3019,3020),c("IID","PC1")]
# Prepare table with ampliseq IDs
ampliseq_ids <- eigenvectors.df$IID[2505:3019]
# Remove ampliseq from eigenvectors data
selected_samples <- ! eigenvectors.df$IID %in% ampliseq_ids
sum(selected_samples)
197+2504
eigenvectors_nfe_kgen.df <- eigenvectors.df[selected_samples,1:6]
"sample" -> colnames(eigenvectors_nfe_kgen.df)[1]
# Prepare phenotypes for ampliseq-kgen data
eigenvectors_nfe_kgen.df$sample[2504:2505]
phenotypes_nfe.df <- data.frame(sample=eigenvectors_nfe_kgen.df$sample[2505:2701], group="Re-processed NFE")
phenotypes_nfe_kgen.df <- rbind(phenotypes_kgen.df,phenotypes_nfe.df)
table(phenotypes_nfe_kgen.df$group)
# Add eigenvectors to phenotypes
eigenphen_nfe_kgen.df <- full_join(
phenotypes_nfe_kgen.df, eigenvectors_nfe_kgen.df, by="sample")
dim(eigenphen_nfe_kgen.df)
head(eigenphen_nfe_kgen.df)
tail(eigenphen_nfe_kgen.df)
# Clean-up
rm(selected_samples, eigenvectors_nfe_kgen.df,
phenotypes_nfe.df, phenotypes_nfe_kgen.df, phenotypes_kgen.df)
# Chunk 10: nfe_pca_plot
# Prepare vector fr colour scale
myColours <- c("EUR"="BLUE", "AFR"="YELLOW", "AMR"="GREEN",
"SAS"="GREY", "EAS"="PINK",
"Re-processed NFE"="CYAN")
myColourScale <- scale_colour_manual(values=myColours)
# Static plot
ggplot(eigenphen_nfe_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=group)) +
labs(title="Re-processed NFE PCA",
subtitle="based on 293 non-rare variants not in LD", x="PC1", y="PC2") +
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
# Interactive plot
plotly_group <- factor(eigenphen_nfe_kgen.df$group,
levels=c("AFR","AMR","EAS","SAS","EUR","Re-processed NFE"))
g <- ggplot(eigenphen_nfe_kgen.df, aes(PC1,PC2)) +
geom_point(aes(col=plotly_group, text=sample)) +
labs(title="Re-processed NFE PCA", x="PC1", y="PC2") +
theme(legend.title=element_blank()) + # To suppress the legend title, otherwise it would be "plotly_group
geom_vline(xintercept=pc1_th, linetype="dashed", size=0.5) +
geom_hline(yintercept=pc2_th, linetype="dashed", size=0.5) +
myColourScale
ggplotly(g, tooltip="text") # By default the tooltip would also show coordinates
# Clean-up
rm(myColours, myColourScale, plotly_group, g)
# Chunk 11
pc1_outliers <- eigenphen_ampliseq_kgen.df$PC1 > pc1_th & eigenphen_ampliseq_kgen.df$sample %in% ampliseq_ids
pc2_outliers <- eigenphen_ampliseq_kgen.df$PC2 > pc2_th & eigenphen_ampliseq_kgen.df$sample %in% ampliseq_ids
pca_outliers <- pc1_outliers | pc2_outliers
sum(pc1_outliers)
sum(pc2_outliers)
sum(pca_outliers)
outliers <- eigenphen_ampliseq_kgen.df[pca_outliers,"sample"]
outliers
# Clean-up
rm(pc1_th, pc2_th, ampliseq_ids,
pc1_outliers, pc2_outliers, pca_outliers)
# Chunk 12: save
save.image(paste(base_folder, "s01_joined_PCA_plots_293_3216_not_rare_not_in_LD.RData", sep="/"))
# Chunk 13: final_section
ls()
sessionInfo()
Sys.time()
