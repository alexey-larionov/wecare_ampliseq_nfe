library(dplyr)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s10_remove_duplicates"
load(paste(source_folder, "s02_remove_duplicates.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
rm(source_folder)
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
colnames(variants.df)
sum(is.na(variants.df$Consequence)) # No missed data : no need in tackling NA
splice_acceptor_variant <- grepl( "splice_acceptor_variant", variants.df$Consequence)
splice_donor_variant <- grepl( "splice_donor_variant", variants.df$Consequence)
stop_gain <- grepl( "stop_gained", variants.df$Consequence)
stop_lost <- grepl( "stop_lost", variants.df$Consequence)
start_lost <- grepl( "start_lost", variants.df$Consequence)
frameshift_variant <- grepl( "frameshift_variant", variants.df$Consequence)
high_impact <- variants.df$IMPACT == "HIGH"
lof <- splice_acceptor_variant | splice_donor_variant | stop_gain | stop_lost | start_lost | frameshift_variant | high_impact
summary(as.factor(lof))
length(lof)
# Clean-up
rm(splice_acceptor_variant, splice_donor_variant,
stop_gain, stop_lost, start_lost,
frameshift_variant, high_impact)
sum(is.na(variants.df$SIFT_call))
sum(is.na(variants.df$PolyPhen_call))
deleterious <- variants.df$SIFT_call == "deleterious" & !is.na(variants.df$SIFT_call)
summary(as.factor(deleterious))
length(deleterious)
probably_damaging <- variants.df$PolyPhen_call == "probably_damaging" & !is.na(variants.df$PolyPhen_call)
summary(as.factor(probably_damaging))
length(probably_damaging)
protein_affecting_missense <- deleterious & probably_damaging
summary(as.factor(protein_affecting_missense))
length(protein_affecting_missense)
# Clean-up
rm(deleterious, probably_damaging)
sum(is.na(variants.df$CLIN_SIG))
# likely_pathogenic and pathogenic
pathogenic <- grepl( "pathogenic", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(pathogenic))
length(pathogenic)
# risk_factor
risk_factor <- grepl( "risk_factor", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(risk_factor))
length(risk_factor)
# toal index of vep clinsig
vep_clinsig <- pathogenic | risk_factor
summary(as.factor(vep_clinsig))
length(vep_clinsig)
# Clean-up
rm(pathogenic, risk_factor)
selected_variants <- lof | protein_affecting_missense | vep_clinsig
summary(as.factor(selected_variants))
length(selected_variants)
selected_variants.df <- variants.df[selected_variants,]
dim(selected_variants.df)
rm(selected_variants, lof, protein_affecting_missense, vep_clinsig)
selected_fields <- c("VarID", "SYMBOL", "CHROM", "POS", "REF", "ALT",
"VARIANT_CLASS", "VariantType", "BIOTYPE", "MultiAllelic",
"Consequence", "IMPACT", "Existing_variation",
"init_AF", "MAX_AF", "MAX_AF_POPS", "gnomAD_NFE_AF", "ExAC_AF_NFE",
"CLIN_SIG", "cv_CLNSIG","cv_CLNREVSTAT", "cv_CLNSIGCONF",
"cv_CLNDN", "cv_GENEINFO", "cv_ID", "cv_ALLELEID", "cv_CLNVC", "cv_MC",
"Codons", "Amino_acids", "EXON", "Prot_pos", "Prot_len", "LoF",
"SIFT_call", "SIFT_score", "PolyPhen_call","PolyPhen_score",
"cv_CLNHGVS", "HGVSc", "HGVSp", "DOMAINS", "PUBMED")
new_selected_fields <- selected_fields[selected_fields %in% colnames(variants.df)]
new_selected_fields
colnames(variants.df)
selected_fields <- c("VarID", "SYMBOL", "CHROM", "POS", "REF", "ALT", "Multiallelic",
"Consequence", "IMPACT", "Existing_variation",
"init_AF", "kgen.EUR_AF", "exac_non_TCGA.AC_NFE", "exac_non_TCGA.AF",
"exac_non_TCGA.AC_NFE", "exac_non_TCGA.AN_NFE",
"CLIN_SIG",
"cDNA_position", "Codons", "Amino_acids", "Protein_position",
"SIFT_call", "SIFT_score", "PolyPhen_call","PolyPhen_score")
length(selected_fields)
selected_variants.df <- selected_variants.df[,selected_fields]
new_selected_fields <- selected_fields[selected_fields %in% colnames(variants.df)]
new_selected_fields
new_selected_fields <- !selected_fields[selected_fields %in% colnames(variants.df)]
new_selected_fields
new_selected_fields <- selected_fields[!selected_fields %in% colnames(variants.df)]
# Chunk 1: set_width
#eval=F
options(width = 999)
# https://stackoverflow.com/questions/36845178/width-of-r-code-chunk-output-in-rmarkdown-files-knitr-ed-to-html
# Chunk 2: start_section
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
# Chunk 3: read_data
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s10_remove_duplicates"
load(paste(source_folder, "s02_remove_duplicates.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
rm(source_folder)
# Chunk 4: start_check
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
# Chunk 5: make_lof_index
sum(is.na(variants.df$Consequence)) # No missed data : no need in tackling NA
splice_acceptor_variant <- grepl( "splice_acceptor_variant", variants.df$Consequence)
splice_donor_variant <- grepl( "splice_donor_variant", variants.df$Consequence)
stop_gain <- grepl( "stop_gained", variants.df$Consequence)
stop_lost <- grepl( "stop_lost", variants.df$Consequence)
start_lost <- grepl( "start_lost", variants.df$Consequence)
frameshift_variant <- grepl( "frameshift_variant", variants.df$Consequence)
high_impact <- variants.df$IMPACT == "HIGH"
lof <- splice_acceptor_variant | splice_donor_variant | stop_gain | stop_lost | start_lost | frameshift_variant | high_impact
summary(as.factor(lof))
length(lof)
# Clean-up
rm(splice_acceptor_variant, splice_donor_variant,
stop_gain, stop_lost, start_lost,
frameshift_variant, high_impact)
# Chunk 6: make_missense_index
sum(is.na(variants.df$SIFT_call))
sum(is.na(variants.df$PolyPhen_call))
deleterious <- variants.df$SIFT_call == "deleterious" & !is.na(variants.df$SIFT_call)
summary(as.factor(deleterious))
length(deleterious)
probably_damaging <- variants.df$PolyPhen_call == "probably_damaging" & !is.na(variants.df$PolyPhen_call)
summary(as.factor(probably_damaging))
length(probably_damaging)
protein_affecting_missense <- deleterious & probably_damaging
summary(as.factor(protein_affecting_missense))
length(protein_affecting_missense)
# Clean-up
rm(deleterious, probably_damaging)
# Chunk 7: make_vep_clinsig_index
sum(is.na(variants.df$CLIN_SIG))
# likely_pathogenic and pathogenic
pathogenic <- grepl( "pathogenic", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(pathogenic))
length(pathogenic)
# risk_factor
risk_factor <- grepl( "risk_factor", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(risk_factor))
length(risk_factor)
# toal index of vep clinsig
vep_clinsig <- pathogenic | risk_factor
summary(as.factor(vep_clinsig))
length(vep_clinsig)
# Clean-up
rm(pathogenic, risk_factor)
# Chunk 8: cumulative index
selected_variants <- lof | protein_affecting_missense | vep_clinsig
summary(as.factor(selected_variants))
length(selected_variants)
selected_variants.df <- variants.df[selected_variants,]
dim(selected_variants.df)
rm(selected_variants, lof, protein_affecting_missense, vep_clinsig)
selected_fields <- c("SplitVarID", "SYMBOL", "CHROM", "POS", "REF", "ALT", "Multiallelic",
"Consequence", "IMPACT", "Existing_variation",
"init_AF", "kgen.EUR_AF", "exac_non_TCGA.AC_NFE", "exac_non_TCGA.AF",
"exac_non_TCGA.AC_NFE", "exac_non_TCGA.AN_NFE",
"CLIN_SIG",
"cDNA_position", "Codons", "Amino_acids", "Protein_position",
"SIFT_call", "SIFT_score", "PolyPhen_call","PolyPhen_score")
length(selected_fields)
selected_variants.df <- selected_variants.df[,selected_fields]
dim(selected_variants.df)
rm(selected_fields)
BRCA1_variants <- selected_variants.df$SYMBOL == "BRCA1"
BRCA2_variants <- selected_variants.df$SYMBOL == "BRCA2"
PALB2_variants <- selected_variants.df$SYMBOL == "PALB2"
sum(BRCA1_variants)
sum(BRCA2_variants)
sum(PALB2_variants)
BRCA1_variants.df <- selected_variants.df[BRCA1_variants,]
BRCA2_variants.df <- selected_variants.df[BRCA2_variants,]
PALB2_variants.df <- selected_variants.df[PALB2_variants,]
dim(BRCA1_variants.df)
dim(BRCA2_variants.df)
dim(PALB2_variants.df)
rm(selected_variants.df, BRCA1_variants, BRCA2_variants, PALB2_variants)
write.table(rbind(BRCA1_variants.df, BRCA2_variants.df, PALB2_variants.df),
file=paste(base_folder,"s01_BRCA1_BRCA2_PALB2_variants.txt",sep="/"),
quote=F, sep="\t", col.names=T, row.names=F)
BRCA1_BRCA2_PALB2_variants <- read.delim("~/Documents/wecare/ampliseq/v03_ampliseq_only_new/s11_check_BRCA1_BRCA2_PALB2/BRCA1_BRCA2_PALB2_variants.txt")
View(BRCA1_BRCA2_PALB2_variants)
View(BRCA1_variants.df)
intersect(BRCA1_variants.df$POS, BRCA1_BRCA2_PALB2_variants$POS)
intersect(BRCA2_variants.df$POS, BRCA1_BRCA2_PALB2_variants$POS)
intersect(PALB2_variants.df$POS, BRCA1_BRCA2_PALB2_variants$POS)
BRCA1_BRCA2_PALB2_variants.df <- rbind(BRCA1_variants.df, BRCA2_variants.df, PALB2_variants.df)
write.table(BRCA1_BRCA2_PALB2_variants.df,
file=paste(base_folder,"s01_BRCA1_BRCA2_PALB2_variants.txt",sep="/"),
quote=F, sep="\t", col.names=T, row.names=F)
BRCA1_BRCA2_PALB2_high_impact_variants.df <- BRCA1_BRCA2_PALB2_variants.df[BRCA1_BRCA2_PALB2_variants.df$IMPACT=="HIGH",]
View(BRCA1_BRCA2_PALB2_high_impact_variants.df)
# Chunk 1: set_width
#eval=F
options(width = 999)
# https://stackoverflow.com/questions/36845178/width-of-r-code-chunk-output-in-rmarkdown-files-knitr-ed-to-html
# Chunk 2: start_section
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
# Chunk 3: read_data
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s10_remove_duplicates"
load(paste(source_folder, "s02_remove_duplicates.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
rm(source_folder)
# Chunk 4: start_check
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
# Chunk 5: make_lof_index
sum(is.na(variants.df$Consequence)) # No missed data : no need in tackling NA
splice_acceptor_variant <- grepl( "splice_acceptor_variant", variants.df$Consequence)
splice_donor_variant <- grepl( "splice_donor_variant", variants.df$Consequence)
stop_gain <- grepl( "stop_gained", variants.df$Consequence)
stop_lost <- grepl( "stop_lost", variants.df$Consequence)
start_lost <- grepl( "start_lost", variants.df$Consequence)
frameshift_variant <- grepl( "frameshift_variant", variants.df$Consequence)
high_impact <- variants.df$IMPACT == "HIGH"
lof <- splice_acceptor_variant | splice_donor_variant | stop_gain | stop_lost | start_lost | frameshift_variant | high_impact
summary(as.factor(lof))
length(lof)
# Clean-up
rm(splice_acceptor_variant, splice_donor_variant,
stop_gain, stop_lost, start_lost,
frameshift_variant, high_impact)
# Chunk 6: make_missense_index
sum(is.na(variants.df$SIFT_call))
sum(is.na(variants.df$PolyPhen_call))
deleterious <- variants.df$SIFT_call == "deleterious" & !is.na(variants.df$SIFT_call)
summary(as.factor(deleterious))
length(deleterious)
probably_damaging <- variants.df$PolyPhen_call == "probably_damaging" & !is.na(variants.df$PolyPhen_call)
summary(as.factor(probably_damaging))
length(probably_damaging)
protein_affecting_missense <- deleterious & probably_damaging
summary(as.factor(protein_affecting_missense))
length(protein_affecting_missense)
# Clean-up
rm(deleterious, probably_damaging)
# Chunk 7: make_vep_clinsig_index
sum(is.na(variants.df$CLIN_SIG))
# likely_pathogenic and pathogenic
pathogenic <- grepl( "pathogenic", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(pathogenic))
length(pathogenic)
# risk_factor
risk_factor <- grepl( "risk_factor", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(risk_factor))
length(risk_factor)
# toal index of vep clinsig
vep_clinsig <- pathogenic | risk_factor
summary(as.factor(vep_clinsig))
length(vep_clinsig)
# Clean-up
rm(pathogenic, risk_factor)
# Chunk 8: cumulative index
selected_variants <- lof | protein_affecting_missense | vep_clinsig
summary(as.factor(selected_variants))
length(selected_variants)
selected_variants.df <- variants.df[selected_variants,]
dim(selected_variants.df)
rm(selected_variants, lof, protein_affecting_missense, vep_clinsig)
# Chunk 9: select_fields
selected_fields <- c("SplitVarID", "SYMBOL", "CHROM", "POS", "REF", "ALT", "Multiallelic",
"Consequence", "IMPACT", "Existing_variation",
"init_AF", "kgen.EUR_AF", "exac_non_TCGA.AC_NFE", "exac_non_TCGA.AF",
"exac_non_TCGA.AC_NFE", "exac_non_TCGA.AN_NFE",
"CLIN_SIG",
"cDNA_position", "Codons", "Amino_acids", "Protein_position",
"SIFT_call", "SIFT_score", "PolyPhen_call","PolyPhen_score")
length(selected_fields)
selected_variants.df <- selected_variants.df[,selected_fields]
dim(selected_variants.df)
rm(selected_fields)
# Chunk 10: select_variants
BRCA1_variants <- selected_variants.df$SYMBOL == "BRCA1"
BRCA2_variants <- selected_variants.df$SYMBOL == "BRCA2"
PALB2_variants <- selected_variants.df$SYMBOL == "PALB2"
sum(BRCA1_variants)
sum(BRCA2_variants)
sum(PALB2_variants)
BRCA1_variants.df <- selected_variants.df[BRCA1_variants,]
BRCA2_variants.df <- selected_variants.df[BRCA2_variants,]
PALB2_variants.df <- selected_variants.df[PALB2_variants,]
dim(BRCA1_variants.df)
dim(BRCA2_variants.df)
dim(PALB2_variants.df)
rm(selected_variants.df, BRCA1_variants, BRCA2_variants, PALB2_variants)
# Chunk 1: set_width
#eval=F
options(width = 999)
# https://stackoverflow.com/questions/36845178/width-of-r-code-chunk-output-in-rmarkdown-files-knitr-ed-to-html
# Chunk 2: start_section
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
# Chunk 3: read_data
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s10_remove_duplicates"
load(paste(source_folder, "s02_remove_duplicates.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
rm(source_folder)
# Chunk 4: start_check
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
# Chunk 5: make_lof_index
sum(is.na(variants.df$Consequence)) # No missed data : no need in tackling NA
splice_acceptor_variant <- grepl( "splice_acceptor_variant", variants.df$Consequence)
splice_donor_variant <- grepl( "splice_donor_variant", variants.df$Consequence)
stop_gain <- grepl( "stop_gained", variants.df$Consequence)
stop_lost <- grepl( "stop_lost", variants.df$Consequence)
start_lost <- grepl( "start_lost", variants.df$Consequence)
frameshift_variant <- grepl( "frameshift_variant", variants.df$Consequence)
high_impact <- variants.df$IMPACT == "HIGH"
lof <- splice_acceptor_variant | splice_donor_variant | stop_gain | stop_lost | start_lost | frameshift_variant | high_impact
summary(as.factor(lof))
length(lof)
# Clean-up
rm(splice_acceptor_variant, splice_donor_variant,
stop_gain, stop_lost, start_lost,
frameshift_variant, high_impact)
# Chunk 6: make_missense_index
sum(is.na(variants.df$SIFT_call))
sum(is.na(variants.df$PolyPhen_call))
deleterious <- variants.df$SIFT_call == "deleterious" & !is.na(variants.df$SIFT_call)
summary(as.factor(deleterious))
length(deleterious)
probably_damaging <- variants.df$PolyPhen_call == "probably_damaging" & !is.na(variants.df$PolyPhen_call)
summary(as.factor(probably_damaging))
length(probably_damaging)
protein_affecting_missense <- deleterious & probably_damaging
summary(as.factor(protein_affecting_missense))
length(protein_affecting_missense)
# Clean-up
rm(deleterious, probably_damaging)
# Chunk 7: make_vep_clinsig_index
sum(is.na(variants.df$CLIN_SIG))
# likely_pathogenic and pathogenic
pathogenic <- grepl( "pathogenic", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(pathogenic))
length(pathogenic)
# risk_factor
risk_factor <- grepl( "risk_factor", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(risk_factor))
length(risk_factor)
# toal index of vep clinsig
vep_clinsig <- pathogenic | risk_factor
summary(as.factor(vep_clinsig))
length(vep_clinsig)
# Clean-up
rm(pathogenic, risk_factor)
# Chunk 8: cumulative index
selected_variants <- lof | protein_affecting_missense | vep_clinsig
summary(as.factor(selected_variants))
length(selected_variants)
selected_variants.df <- variants.df[selected_variants,]
dim(selected_variants.df)
rm(selected_variants, lof, protein_affecting_missense, vep_clinsig)
# Chunk 9: select_fields
selected_fields <- c("SplitVarID", "SYMBOL", "CHROM", "POS", "REF", "ALT", "Multiallelic",
"Consequence", "IMPACT", "Existing_variation",
"init_AF", "kgen.EUR_AF", "exac_non_TCGA.AC_NFE", "exac_non_TCGA.AF",
"exac_non_TCGA.AC_NFE", "exac_non_TCGA.AN_NFE",
"CLIN_SIG",
"cDNA_position", "Codons", "Amino_acids", "Protein_position",
"SIFT_call", "SIFT_score", "PolyPhen_call","PolyPhen_score")
length(selected_fields)
selected_variants.df <- selected_variants.df[,selected_fields]
dim(selected_variants.df)
rm(selected_fields)
# Chunk 10: select_variants
BRCA1_variants <- selected_variants.df$SYMBOL == "BRCA1"
BRCA2_variants <- selected_variants.df$SYMBOL == "BRCA2"
PALB2_variants <- selected_variants.df$SYMBOL == "PALB2"
sum(BRCA1_variants)
sum(BRCA2_variants)
sum(PALB2_variants)
BRCA1_variants.df <- selected_variants.df[BRCA1_variants,]
BRCA2_variants.df <- selected_variants.df[BRCA2_variants,]
PALB2_variants.df <- selected_variants.df[PALB2_variants,]
dim(BRCA1_variants.df)
dim(BRCA2_variants.df)
dim(PALB2_variants.df)
BRCA1_BRCA2_PALB2_variants.df <- rbind(BRCA1_variants.df, BRCA2_variants.df, PALB2_variants.df)
BRCA1_BRCA2_PALB2_high_impact_variants.df <-
BRCA1_BRCA2_PALB2_variants.df[BRCA1_BRCA2_PALB2_variants.df$IMPACT=="HIGH",]
dim(BRCA1_BRCA2_PALB2_variants.df)
dim(BRCA1_BRCA2_PALB2_high_impact_variants.df)
rm(selected_variants.df, BRCA1_variants, BRCA2_variants, PALB2_variants,
BRCA1_variants.df, BRCA2_variants.df, PALB2_variants.df)
write.table(BRCA1_BRCA2_PALB2_variants.df,
file=paste(base_folder,"s01_BRCA1_BRCA2_PALB2_variants.txt",sep="/"),
quote=F, sep="\t", col.names=T, row.names=F)
write.table(BRCA1_BRCA2_PALB2_high_impact_variants.df,
file=paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/"),
quote=F, sep="\t", col.names=T, row.names=F)
rm(BRCA1_BRCA2_PALB2_variants.df, BRCA1_BRCA2_PALB2_high_impact_variants.df)
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s10_remove_duplicates"
load(paste(source_folder, "s02_remove_duplicates.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
rm(source_folder)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/"))
View(selected_variants.df)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/")
header = T)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/",
?read.table
View(selected_variants.df)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/"),
col.names = T)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/"),
header = T)
View(selected_variants.df)
dim(selected_variants.df)
pathogenic_variants <- selected_variants.df$SplitVarID
selected_fields <- c("SplitVarID", "SYMBOL", "CHROM", "POS", "REF", "ALT", "Multiallelic",
"Consequence", "IMPACT", "Existing_variation",
"init_AF", "kgen.EUR_AF", "exac_non_TCGA.AC_NFE", "exac_non_TCGA.AF",
"exac_non_TCGA.AC_NFE", "exac_non_TCGA.AN_NFE",
"CLIN_SIG",
"cDNA_position", "Codons", "Amino_acids", "Protein_position")
length(selected_fields)
selected_variants.df <- variants.df[pathogenic_variants,selected_fields]
selected_genotypes.mx <- genotypes.mx[pathogenic_variants,]
dim(selected_variants.df)
rm(selected_fields, pathogenic_variants)
selected_ac_per_sample <- apply(selected_genotypes.mx, 2, sum, na.rm=T)
carriers <- selected_ac_per_sample > 0
sum(carriers)
selected_genotypes.mx <- selected_genotypes.mx[,carriers]
selected_genotypes.mx
colnames(selected_genotypes.mx)
rm(selected_ac_per_sample, carriers)
write.table(selected_genotypes.mx, file=paste(base_folder,"s02_BRCA1_BRCA2_PALB2_carriers.txt",sep="/"),
quote=F, sep="\t", col.names=T, row.names=T)
rm(selected_genotypes.mx)
rm(selected_ac_per_sample, carriers, selected_variants.df)
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
