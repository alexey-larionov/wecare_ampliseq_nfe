dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
# Chunk 5: make_lof_index
sum(is.na(variants.df$Consequence)) # No missed data : no need in tackling NA
splice_acceptor_variant <- grepl( "splice_acceptor_variant", variants.df$Consequence)
splice_donor_variant <- grepl( "splice_donor_variant", variants.df$Consequence)
stop_gain <- grepl( "stop_gained", variants.df$Consequence)
stop_lost <- grepl( "stop_lost", variants.df$Consequence)
start_lost <- grepl( "start_lost", variants.df$Consequence)
frameshift_variant <- grepl( "frameshift_variant", variants.df$Consequence)
high_impact <- variants.df$IMPACT == "HIGH"
lof <- splice_acceptor_variant | splice_donor_variant | stop_gain | stop_lost | start_lost | frameshift_variant | high_impact
summary(as.factor(lof))
length(lof)
# Clean-up
rm(splice_acceptor_variant, splice_donor_variant,
stop_gain, stop_lost, start_lost,
frameshift_variant, high_impact)
# Chunk 6: make_missense_index
sum(is.na(variants.df$SIFT_call))
sum(is.na(variants.df$PolyPhen_call))
deleterious <- variants.df$SIFT_call == "deleterious" & !is.na(variants.df$SIFT_call)
summary(as.factor(deleterious))
length(deleterious)
probably_damaging <- variants.df$PolyPhen_call == "probably_damaging" & !is.na(variants.df$PolyPhen_call)
summary(as.factor(probably_damaging))
length(probably_damaging)
protein_affecting_missense <- deleterious & probably_damaging
summary(as.factor(protein_affecting_missense))
length(protein_affecting_missense)
# Clean-up
rm(deleterious, probably_damaging)
# Chunk 7: make_vep_clinsig_index
sum(is.na(variants.df$CLIN_SIG))
# likely_pathogenic and pathogenic
pathogenic <- grepl( "pathogenic", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(pathogenic))
length(pathogenic)
# risk_factor
risk_factor <- grepl( "risk_factor", variants.df$CLIN_SIG) & !is.na(variants.df$CLIN_SIG)
summary(as.factor(risk_factor))
length(risk_factor)
# toal index of vep clinsig
vep_clinsig <- pathogenic | risk_factor
summary(as.factor(vep_clinsig))
length(vep_clinsig)
# Clean-up
rm(pathogenic, risk_factor)
# Chunk 8: cumulative index
selected_variants <- lof | protein_affecting_missense | vep_clinsig
summary(as.factor(selected_variants))
length(selected_variants)
selected_variants.df <- variants.df[selected_variants,]
dim(selected_variants.df)
rm(selected_variants, lof, protein_affecting_missense, vep_clinsig)
# Chunk 9: select_fields
selected_fields <- c("SplitVarID", "SYMBOL", "CHROM", "POS", "REF", "ALT", "Multiallelic",
"Consequence", "IMPACT", "Existing_variation",
"init_AF", "kgen.EUR_AF", "exac_non_TCGA.AC_NFE", "exac_non_TCGA.AF",
"exac_non_TCGA.AC_NFE", "exac_non_TCGA.AN_NFE",
"CLIN_SIG",
"cDNA_position", "Codons", "Amino_acids", "Protein_position",
"SIFT_call", "SIFT_score", "PolyPhen_call","PolyPhen_score")
length(selected_fields)
selected_variants.df <- selected_variants.df[,selected_fields]
dim(selected_variants.df)
rm(selected_fields)
# Chunk 10: select_variants
BRCA1_variants <- selected_variants.df$SYMBOL == "BRCA1"
BRCA2_variants <- selected_variants.df$SYMBOL == "BRCA2"
PALB2_variants <- selected_variants.df$SYMBOL == "PALB2"
sum(BRCA1_variants)
sum(BRCA2_variants)
sum(PALB2_variants)
BRCA1_variants.df <- selected_variants.df[BRCA1_variants,]
BRCA2_variants.df <- selected_variants.df[BRCA2_variants,]
PALB2_variants.df <- selected_variants.df[PALB2_variants,]
dim(BRCA1_variants.df)
dim(BRCA2_variants.df)
dim(PALB2_variants.df)
BRCA1_BRCA2_PALB2_variants.df <- rbind(BRCA1_variants.df, BRCA2_variants.df, PALB2_variants.df)
BRCA1_BRCA2_PALB2_high_impact_variants.df <-
BRCA1_BRCA2_PALB2_variants.df[BRCA1_BRCA2_PALB2_variants.df$IMPACT=="HIGH",]
dim(BRCA1_BRCA2_PALB2_variants.df)
dim(BRCA1_BRCA2_PALB2_high_impact_variants.df)
rm(selected_variants.df, BRCA1_variants, BRCA2_variants, PALB2_variants,
BRCA1_variants.df, BRCA2_variants.df, PALB2_variants.df)
write.table(BRCA1_BRCA2_PALB2_variants.df,
file=paste(base_folder,"s01_BRCA1_BRCA2_PALB2_variants.txt",sep="/"),
quote=F, sep="\t", col.names=T, row.names=F)
write.table(BRCA1_BRCA2_PALB2_high_impact_variants.df,
file=paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/"),
quote=F, sep="\t", col.names=T, row.names=F)
rm(BRCA1_BRCA2_PALB2_variants.df, BRCA1_BRCA2_PALB2_high_impact_variants.df)
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s10_remove_duplicates"
load(paste(source_folder, "s02_remove_duplicates.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s12_check_BRCA1_BRCA2_PALB2"
rm(source_folder)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/"))
View(selected_variants.df)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/")
header = T)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/",
?read.table
View(selected_variants.df)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/"),
col.names = T)
selected_variants.df <- read.table(paste(base_folder,"s01_BRCA1_BRCA2_PALB2_high_impact_variants.txt",sep="/"),
header = T)
View(selected_variants.df)
dim(selected_variants.df)
pathogenic_variants <- selected_variants.df$SplitVarID
selected_fields <- c("SplitVarID", "SYMBOL", "CHROM", "POS", "REF", "ALT", "Multiallelic",
"Consequence", "IMPACT", "Existing_variation",
"init_AF", "kgen.EUR_AF", "exac_non_TCGA.AC_NFE", "exac_non_TCGA.AF",
"exac_non_TCGA.AC_NFE", "exac_non_TCGA.AN_NFE",
"CLIN_SIG",
"cDNA_position", "Codons", "Amino_acids", "Protein_position")
length(selected_fields)
selected_variants.df <- variants.df[pathogenic_variants,selected_fields]
selected_genotypes.mx <- genotypes.mx[pathogenic_variants,]
dim(selected_variants.df)
rm(selected_fields, pathogenic_variants)
selected_ac_per_sample <- apply(selected_genotypes.mx, 2, sum, na.rm=T)
carriers <- selected_ac_per_sample > 0
sum(carriers)
selected_genotypes.mx <- selected_genotypes.mx[,carriers]
selected_genotypes.mx
colnames(selected_genotypes.mx)
rm(selected_ac_per_sample, carriers)
write.table(selected_genotypes.mx, file=paste(base_folder,"s02_BRCA1_BRCA2_PALB2_carriers.txt",sep="/"),
quote=F, sep="\t", col.names=T, row.names=T)
rm(selected_genotypes.mx)
rm(selected_ac_per_sample, carriers, selected_variants.df)
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
Sys.time()
rm(list=ls())
graphics.off()
library(knitr)
library(dplyr)
library(ggplot2)
#library(tidyr) # for separate (for VEP parsing)
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s14_explore_phenotypes"
opts_knit$set(root.dir = base_folder)
options(stringsAsFactors = F)
options(warnPartialMatchArgs = T,
warnPartialMatchAttr = T,
warnPartialMatchDollar = T)
#options(error = browser()) # Type Q or c to exit, drop browser level
# https://support.rstudio.com/hc/en-us/articles/200713843?version=1.1.456&mode=desktop
# https://stackoverflow.com/questions/13052522/how-to-leave-the-r-browser-mode-in-the-console-window/13052588
source_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s13_ampliseq-nfe_only_PCA/s03_explore_PCA_plots_exclude_outliers"
load(paste(source_folder, "s03_exclude_outliers_recalculate_acanaf.RData", sep="/"))
base_folder="/Users/alexey/Documents/wecare/ampliseq/v04_ampliseq_nfe/s14_explore_phenotypes"
rm(source_folder)
ls()
dim(genotypes.mx)
dim(phenotypes.df)
dim(variants.df)
sum(colnames(genotypes.mx) != rownames(phenotypes.df))
sum(rownames(genotypes.mx) != rownames(variants.df))
table(phenotypes.df$cc)
phenotypes.df <- phenotypes.df[phenotypes.df$cc != -1,]
table(phenotypes.df$cc)
dim(phenotypes.df)
colnames(phenotypes.df)
cc_rt.df <- phenotypes.df[, c("cc", "xrtbreast")]
str(cc_rt.df)
table(cc_rt.df)
fisher.test(table(cc_rt.df))
rm(cc_rt.df)
ggplot(phenotypes.df) +
aes(sub_dx_age, fill=as.factor(cc)) +
geom_density(colour="black", alpha=0.3) +
scale_fill_discrete(name="Code", labels=c("UBC", "CBC"))
mean(phenotypes.df$sub_dx_age)
median(phenotypes.df$sub_dx_age)
t.test(sub_dx_age~cc, data=phenotypes.df)
quantiles(phenotypes.df$sub_dx_age)
quantile(phenotypes.df$sub_dx_age)
mean(phenotypes.df$sub_dx_age)
x <- table(phenotypes.df[,c("cc","family_history")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=as.factor(family_history)) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_discrete(name="")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
# Pregnancies counts at different time points
summary(as.factor(phenotypes.df$Num_ftp_fd)) # Pregnancies before the 1st Ds
summary(as.factor(phenotypes.df$rh_num_ftp_fd_rd)) # Pregnancies between Ds1 and Rs time
summary(as.factor(phenotypes.df$num_ftp_rd)) # Pregnancies at Rs time
sum(phenotypes.df$Num_ftp_fd != phenotypes.df$num_ftp_rd)
# Exclude excessive annotations and rename the retained
phenotypes.df <- phenotypes.df %>%
rename(num_ftp=num_ftp_rd) %>%
select(-Num_ftp_fd, -rh_num_ftp_fd_rd)
x <- table(phenotypes.df[,c("cc","num_ftp")])
x
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
ggplot(phenotypes.df) +
aes(as.factor(cc),
fill=factor(num_ftp, levels=c(14,7,6,5,4,3,2,1,0,-1))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(name="",
values = c("-1"="#F8766D",
"0"="#D89000",
"1"="#A3A500",
"2"="#39B600",
"3"="#00BF7D",
"4"="#00BFC4",
"5"="#00B0F6",
"6"="#9590FF",
"7"="#E76BF3",
"14"="#FF62BC")) +
ggtitle("num_ftp")
# An unusual case...
phenotypes.df[phenotypes.df$num_ftp==14,c("num_ftp","sub_dx_age")]
rm(x)
num_preg <- rep(NA, nrow(phenotypes.df))
0 -> num_preg[phenotypes.df$num_ftp %in% c(-1,0)] # Never pregnant and non-fulltime pregnancy
1 -> num_preg[phenotypes.df$num_ftp %in% c(1,2,3)]
2 -> num_preg[phenotypes.df$num_ftp %in% c(4,5,6,7,14)]
phenotypes.df <- cbind(phenotypes.df,num_preg)
x <- table(phenotypes.df[,c("cc","num_preg")])
x
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
ggplot(phenotypes.df) +
aes(as.factor(cc),
fill=factor(num_preg, levels=c(2,1,0))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(name="",
values = c("0"="#F8766D",
"1"="#39B600",
"2"="#00B0F6")) +
ggtitle("num_preg_coded")
38+106+45
summary(as.factor(phenotypes.df$stage_fd))
x <- table(phenotypes.df[,c("cc","stage_fd")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$stage_fd, levels=c(2,1))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(values = c("2"="#00BFC4", "1"="#F8766D"), name="") +
ggtitle("stage_fd")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
summary(as.factor(phenotypes.df$Tusize1_cat))
x <- table(phenotypes.df[,c("cc","Tusize1_cat")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$Tusize1_cat,
levels=c("inflammatory","unknown","gt20mm","gt10-le20mm","le10mm"))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_discrete(name="") +
ggtitle("Tumour size")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
rm(x)
rm(x, num_preg)
summary(as.factor(phenotypes.df$Lnsum1_cat))
x <- table(phenotypes.df[,c("cc","Lnsum1_cat")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$Lnsum1_cat,
levels=c("positive","negative","no nores sampled","unknown"))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_discrete(name="") +
ggtitle("Lymph nodes")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
rm(x)
x <- table(phenotypes.df[,c("cc","treatment")])
x
data.df <- phenotypes.df %>%
mutate(tx = hormone_self_mra + chemo_self_mra,
chx = hormone_self_mra + chemo_self_mra + xrtbreast)
summary(as.factor(data.df$tx))
y <- table(data.df[,c("cc","tx")])
y
summary(as.factor(data.df$chx))
z<- table(data.df[,c("cc","chx")])
z
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$treatment, levels=c(1,0))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(labels=c("1" = "Yes", "0" = "No"), values = c("1"="#00BFC4", "0"="#F8766D"), name="") +
ggtitle("Cytotoxic or hormonal treatment (self-reported)")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
ggplot(data.df) +
aes(as.factor(cc), fill=factor(data.df$tx, levels=c(2,1,0))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(name="",
labels=c("0" = "None", "1" = "One", "2" = "Both"),
values=c("0"="#F8766D", "1"="#39B600", "2"="#00B0F6")) +
ggtitle("Cytotoxic and hormonal treatment (self-reported)")
ggplot(data.df) +
aes(as.factor(cc), fill=factor(data.df$chx, levels=c(3,2,1,0))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(labels=c("3" = "All", "2" = "Two", "1" = "One", "0" = "No"),
values = c("3"="#FF62BC", "2"="#00B0F6","1"="#39B600", "0"="#F8766D"),
name="") +
ggtitle("Any of treatments (chemo- horm- or x-ray)")
rm(x,y,z,data.df)
summary(as.factor(phenotypes.df$hormone_self_mra))
x <- table(phenotypes.df[,c("cc","hormone_self_mra")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$hormone_self_mra, levels=c(1,0))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(labels=c("1" = "Yes", "0" = "No"), values = c("1"="#00BFC4", "0"="#F8766D"), name="") +
ggtitle("Hormonal treatment (self-reported)")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
ggplot(phenotypes.df) +
aes(x = sub_dx_age, fill=factor(phenotypes.df$hormone_self_mra, levels=c(1,0))) +
geom_density(colour="black", alpha=0.3) +
scale_fill_manual(labels=c("1" = "Yes", "0" = "No"), values = c("1"="#00BFC4", "0"="#F8766D"), name="") +
ggtitle("Hormonal treatment by age")
# Somehow unexpected and outdated hormonal treatment pratices
# - Nearly half of ER+ve patients did not receive hormonal treatment
# - 27 ER-ve patients received the hormopnal treatment
table(phenotypes.df[,c("er1_cat","hormone_self_mra")])
summary(as.factor(phenotypes.df$chemo_self_mra))
x <- table(phenotypes.df[,c("cc","chemo_self_mra")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$chemo_self_mra, levels=c(1,0))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(labels=c("1" = "Yes", "0" = "No"), values = c("1"="#00BFC4", "0"="#F8766D"), name="") +
ggtitle("Cytotoxic treatment (self-reported)")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
ggplot(phenotypes.df) +
aes(x = sub_dx_age, fill=factor(phenotypes.df$chemo_self_mra, levels=c(1,0))) +
geom_density(colour="black", alpha=0.3) +
scale_fill_manual(labels=c("1" = "Yes", "0" = "No"), values = c("1"="#00BFC4", "0"="#F8766D"), name="") +
ggtitle("Cytotoxic treatment by age")
# Expectedly, ER+ve tended to have less cytotoxic treatment
table(phenotypes.df[,c("er1_cat","chemo_self_mra")])
rm(x)
summary(as.factor(phenotypes.df$xrtbreast))
x <- table(phenotypes.df[,c("cc","xrtbreast")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$xrtbreast, levels=c(1,0))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(labels=c("1" = "Yes", "0" = "No"), values = c("1"="#00BFC4", "0"="#F8766D"), name="") +
ggtitle("X-ray treatment (on breast)")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
summary(as.factor(phenotypes.df$er1_cat))
x <- table(phenotypes.df[,c("cc","er1_cat")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$er1_cat,
levels=c("unknown", "positive", "negative"))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(name="",
values = c("negative"="#F8766D",
"unknown"="grey",
"positive"="#00BFC4")) +
ggtitle("er1_cat")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
ggplot(phenotypes.df) +
aes(x = sub_dx_age, fill=factor(phenotypes.df$er1_cat,
levels=c("unknown", "positive", "negative"))) +
geom_density(colour="black", alpha=0.3) +
scale_fill_manual(name="",
values = c("negative"="#F8766D",
"unknown"="grey",
"positive"="#00BFC4")) +
ggtitle("ER by age")
summary(as.factor(phenotypes.df$pr1_cat))
x <- table(phenotypes.df[,c("cc","pr1_cat")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$pr1_cat,
levels=c("unknown", "positive", "negative"))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_manual(name="",
values = c("negative"="#F8766D",
"unknown"="grey",
"positive"="#00BFC4")) +
ggtitle("pr1_cat")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
ggplot(phenotypes.df) +
aes(x = sub_dx_age, fill=factor(phenotypes.df$pr1_cat,
levels=c("unknown", "positive", "negative"))) +
geom_density(colour="black", alpha=0.3) +
scale_fill_manual(name="",
values = c("negative"="#F8766D",
"unknown"="grey",
"positive"="#00BFC4")) +
ggtitle("PR by age")
rm(x)
ggplot(phenotypes.df) +
aes(sub_dx_age, fill=as.factor(cc)) +
geom_density(colour="black", alpha=0.3) +
scale_fill_discrete(name="Code", labels=c("UBC", "CBC"))
phenotypes.df <- phenotypes.df %>% mutate(epr=paste(er1_cat, pr1_cat))
ggplot(phenotypes.df) +
aes( as.factor(cc), fill=as.factor(epr)) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
facet_grid(er1_cat~pr1_cat) +
ylab("ER") +
ggtitle ("PR")+
theme(plot.title = element_text(hjust = 0.5))
summary(as.factor(phenotypes.df$grade1))
x <- table(phenotypes.df[,c("cc","grade1")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$grade1,
levels=c("unknown","poor/undifferentiated","moderate","well"))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_discrete(name="") +
ggtitle("grade1")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
summary(as.factor(phenotypes.df$Hist_lob_other))
x <- table(phenotypes.df[,c("cc","Hist_lob_other")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=as.factor(Hist_lob_other)) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_discrete(name="") +
ggtitle("Hist_lob_other")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
rm(x)
summary(as.factor(phenotypes.df$histo1_cat))
x <- table(phenotypes.df[,c("cc","histo1_cat")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=factor(phenotypes.df$histo1_cat,
levels=c("other carcinoma", "medullary", "Tubular/mucinous", "lobular", "ductal"))) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_discrete(name="") +
ggtitle("histo1_cat")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
ggplot(phenotypes.df) +
aes(Sample_num, fill=as.factor(cc)) +
geom_density(colour="black", alpha=0.3) +
scale_fill_discrete(name="", labels=c("0" = "UBC", "1" = "CBC"))
t.test(Sample_num~cc, data=phenotypes.df)
cc <- phenotypes.df$cc
lumi_num <- phenotypes.df$illumina_id
lumi_num <- as.integer(substr(lumi_num, 2, 5))
data.df <- data_frame(lumi_num,cc)
ggplot(data.df) +
aes(lumi_num, fill=as.factor(cc)) +
geom_density(colour="black", alpha=0.3) +
scale_fill_discrete(name="", labels=c("0" = "UBC", "1" = "CBC"))
t.test(lumi_num~cc, data=data.df)
rm(lumi_num,cc,data.df)
rm(x)
x <- table(phenotypes.df[,c("cc","illumina_lane")])
x
ggplot(phenotypes.df) +
aes(as.factor(cc), fill=as.factor(illumina_lane)) +
geom_bar(colour="black", alpha=0.3) +
scale_x_discrete(name ="", labels=c("0" = "UBC", "1" = "CBC")) +
scale_fill_discrete(name="")
chisq.test(x,simulate.p.value=TRUE)
fisher.test(x,simulate.p.value=TRUE)
rm(x)
